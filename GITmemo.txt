Setup Commands
git config --global user.name "Your Name": Sets the name you want attached to your commit transactions.
git config --global user.email "youremail@example.com": Sets the email you want attached to your commit transactions.
git config --global color.ui auto: Enables automatic command line coloring to differentiate the output.

Basic Commands
git init: Initializes a new Git repository in the current directory.
git clone <repository>: Clones a repository into a new directory.

Working with Branches
git branch: Lists all local branches in the current repository.
git branch <branch-name>: Creates a new branch.
git checkout <branch-name>: Switches to the specified branch.
git checkout -b <branch-name>: Creates a new branch and switches to it.
git merge <branch-name>: Merges the specified branch into the current branch.

Staging and Committing
git status: Displays the state of the working directory and staging area.
git add <file>: Stages a specific file.
git add .: Stages all changes in the current directory.
git commit -m "commit message": Commits staged changes with a message.
git commit -a -m "commit message": Commits all changes, including those not yet staged.

Viewing and Exploring History
git log: Shows the commit history for the current branch.
git log --oneline: Shows a condensed version of the commit history.
git log --graph --oneline --all: Displays a graphical representation of the commit history.

Synchronizing Repositories
git fetch: Downloads objects and refs from another repository.
git pull: Fetches and merges changes from the remote repository to the current branch.
git push: Uploads local branch commits to the remote repository.
git push origin <branch-name>: Pushes a specific branch to the remote repository.

Undoing Changes
git reset <file>: Unstages a file while preserving its changes in the working directory.
git reset --hard <commit>: Resets the working directory and index to the specified commit, discarding all changes.
git revert <commit>: Creates a new commit that undoes the changes made by a specific commit.

Deleting and Renaming
git branch -d <branch-name>: Deletes a branch locally.
git branch -D <branch-name>: Forces the deletion of a branch.
git rm <file>: Removes a file from the working directory and stages the removal.
git mv <old-filename> <new-filename>: Renames a file and stages the change.

Stashing Changes
git stash: Temporarily saves changes that are not ready to be committed.
git stash pop: Applies the most recently stashed changes and removes them from the stash list.
git stash list: Lists all stashed changes.
git stash drop <stash@{n}>: Discards a specific stash.

Miscellaneous
git remote -v: Shows the remote URLs associated with the repository.
git show <commit>: Displays changes introduced by a specific commit.
git diff: Shows the differences between the working directory and the index or a commit.
git tag <tag-name>: Creates a tag (a named reference to a specific commit).
